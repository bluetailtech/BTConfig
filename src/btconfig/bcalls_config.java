package btconfig;

import javax.swing.filechooser.*;
import javax.swing.*;
import java.io.*;

public class bcalls_config extends javax.swing.JFrame {

  BTFrame parent;

  public btt_bcalls bcalls;

    /**
     * Creates new form bcalls_config
     */
    public bcalls_config(BTFrame p) {
      initComponents();
      this.parent = p;

      bcalls = new btt_bcalls(this);
    }

    public void init() {
      try {
        apikey_tf.setText( parent.prefs.get("bcalls_apikey", "") );
      } catch(Exception e) {
      }
      try {
        sid_tf.setText( parent.prefs.get("bcalls_sid", "") );
      } catch(Exception e) {
      }
      try {
        p25_sys_id.setText( parent.prefs.get("bcalls_p25_sys_id", "") );
      } catch(Exception e) {
      }
      try {
        ffmpeg_path.setText( parent.prefs.get("bcalls_mpeg_path", "/usr/bin/ffmpeg") );
      } catch(Exception e) {
      }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        apikey_tf = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        sid_tf = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        p25_sys_id = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        ffmpeg_set_path = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        ffmpeg_path = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel9 = new javax.swing.JPanel();
        test_ffmpeg = new javax.swing.JButton();
        test_result = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        en_broadcastify_calls = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bcalls_ok = new javax.swing.JButton();

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Assigned By Broadcastify Admin. Keep This Information Private!!"));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel2.setText("API Key");
        jPanel3.add(jLabel2);

        apikey_tf.setColumns(64);
        jPanel3.add(apikey_tf);

        jPanel2.add(jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Assigned By Broadcastify Admin"));
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel3.setText("SID (NODE-ID)");
        jPanel4.add(jLabel3);

        sid_tf.setColumns(10);
        jPanel4.add(sid_tf);

        jPanel2.add(jPanel4);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("The System ID Of The Monitored System Associated With The Assigned Key/SID Pair (decimal)"));
        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel4.setText("SYSTEM_ID");
        jPanel5.add(jLabel4);

        p25_sys_id.setColumns(12);
        jPanel5.add(p25_sys_id);

        jLabel5.setText("(decimal) Note: This is the system id of the system you are monitoring");
        jPanel5.add(jLabel5);

        jPanel2.add(jPanel5);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Path To FFMPEG Executable"));
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        ffmpeg_set_path.setText("Set Path");
        ffmpeg_set_path.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ffmpeg_set_pathActionPerformed(evt);
            }
        });
        jPanel7.add(ffmpeg_set_path);

        jSeparator1.setMinimumSize(new java.awt.Dimension(50, 0));
        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 0));
        jPanel7.add(jSeparator1);

        ffmpeg_path.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        ffmpeg_path.setText("/usr/bin/ffmpeg");
        jPanel7.add(ffmpeg_path);

        jSeparator2.setMinimumSize(new java.awt.Dimension(50, 0));
        jSeparator2.setPreferredSize(new java.awt.Dimension(50, 0));
        jPanel7.add(jSeparator2);

        jPanel2.add(jPanel7);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        test_ffmpeg.setText("Test FFMPEG");
        test_ffmpeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                test_ffmpegActionPerformed(evt);
            }
        });
        jPanel9.add(test_ffmpeg);

        test_result.setText("Result:");
        jPanel9.add(test_result);

        jPanel2.add(jPanel9);

        en_broadcastify_calls.setText("Enable RR Broadcastify Calls");
        en_broadcastify_calls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                en_broadcastify_callsActionPerformed(evt);
            }
        });
        jPanel8.add(en_broadcastify_calls);

        jPanel2.add(jPanel8);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel11.setPreferredSize(new java.awt.Dimension(821, 50));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("BTT BCalls - Broadcastify Calls Configuration");
        jPanel11.add(jLabel1);

        getContentPane().add(jPanel11, java.awt.BorderLayout.NORTH);

        bcalls_ok.setText("OK");
        bcalls_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcalls_okActionPerformed(evt);
            }
        });
        jPanel1.add(bcalls_ok);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bcalls_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcalls_okActionPerformed
      update();
      setVisible(false);
    }//GEN-LAST:event_bcalls_okActionPerformed

    private void en_broadcastify_callsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_en_broadcastify_callsActionPerformed
        try {
            parent.prefs.putBoolean("en_bcalls", en_broadcastify_calls.isSelected());
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_en_broadcastify_callsActionPerformed

    private void ffmpeg_set_pathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ffmpeg_set_pathActionPerformed
      try {
        JFileChooser chooser = new JFileChooser();

        //FileNameExtensionFilter filter = new FileNameExtensionFilter( "ffmpeg exe", "exe");
        //chooser.setFileFilter(filter);
        int returnVal = chooser.showDialog(parent, "Path To FFMPEG Executable");

        if(returnVal == JFileChooser.APPROVE_OPTION) {
          File file = chooser.getSelectedFile();
          parent.prefs.put("bcalls_mpeg_path", file.getAbsolutePath());
          ffmpeg_path.setText( file.getAbsolutePath() );
        }

        update();
      } catch(Exception e) {
        e.printStackTrace();
      }
    }//GEN-LAST:event_ffmpeg_set_pathActionPerformed

    private void test_ffmpegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_test_ffmpegActionPerformed
      try {
        if( bcalls.is_m4a_supported(ffmpeg_path.getText()) ) {
          test_result.setText("Result: M4A/AAC Audio is supported");
          return;
        }
        else if( bcalls.is_mp3_supported(ffmpeg_path.getText()) ) {
          test_result.setText("Result: MP3 Audio is supported");
          return;
        }
        else {
          test_result.setText("Result: Couldn't determine MP3 / M4A support. incorrect path to ffmpeg?");
        }
      } catch(Exception e) {
      }
    }//GEN-LAST:event_test_ffmpegActionPerformed


    /////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////
    public void update() {
      try {
        parent.prefs.put("bcalls_apikey", apikey_tf.getText());
      } catch(Exception e) {
      }
      try {
        parent.prefs.put("bcalls_sid", sid_tf.getText());
      } catch(Exception e) {
      }
      try {
        parent.prefs.put("bcalls_p25_sys_id", p25_sys_id.getText());
      } catch(Exception e) {
      }
      try {
        parent.prefs.put("bcalls_mpeg_path", ffmpeg_path.getText());
      } catch(Exception e) {
      }
      try {
        bcalls.update_config();
      } catch(Exception e) {
      }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bcalls_config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bcalls_config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bcalls_config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bcalls_config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
            //public void run() {
             //   new bcalls_config().setVisible(true);
            //}
        //});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField apikey_tf;
    private javax.swing.JButton bcalls_ok;
    public javax.swing.JCheckBox en_broadcastify_calls;
    public javax.swing.JLabel ffmpeg_path;
    private javax.swing.JButton ffmpeg_set_path;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    public javax.swing.JTextField p25_sys_id;
    public javax.swing.JTextField sid_tf;
    private javax.swing.JButton test_ffmpeg;
    private javax.swing.JLabel test_result;
    // End of variables declaration//GEN-END:variables
}
